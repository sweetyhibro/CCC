#include <stdio.h>
#include <stdlib.h>

int compare(const void *a, const void *b) {
    return (*(int *)b - *(int *)a);
}

int isSimpleGraph(int *degrees, int n) {
    int i;
    qsort(degrees, n, sizeof(int), compare);
    while (degrees[0] > 0) {
        int d = degrees[0];
        if (d >= n) return 0;
        for (i = 1; i <= d; i++) {
            degrees[i]--;
            if (degrees[i] < 0) return 0;
        }
        degrees[0] = 0;
        qsort(degrees, n, sizeof(int), compare);
    }
    return 1;
}

int main() {
    int n, i;
    printf("Enter the number of vertices: ");
    scanf("%d", &n);
    int *degrees = (int *)malloc(n * sizeof(int));
    printf("Enter the degrees of the vertices: ");
    for (i = 0; i < n; i++) {
        scanf("%d", &degrees[i]);
    }
    if (isSimpleGraph(degrees, n)) {
        printf("The sequence can represent a simple graph.\n");
    } else {
        printf("The sequence cannot represent a simple graph.\n");
    }
    free(degrees);
    return 0;
}
